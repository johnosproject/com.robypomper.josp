import com.robypomper.build.java.JavaRunnableUtils

/**
 * Gradle configurations to manage JOD and JSL as java implementations.
 *
 * Summary:
 * - JOSP Commons configs
 * - Runners Tasks
 * - Runners Configs Tasks
 * - Publication include
 *
 * This file configure and provide tasks for JOD and JSL artifacts:
 * - JOD: run (Apple, Fruit), run by Configs, publish as jar
 * - JSL: run (resilient, new), run by Configs, publish as jar
 */


// -------------------
// JOD and JSL configs
// -------------------

sourceSets {
    jospJOD {}
    jospJSL {}
}

configurations {
    // JOD
    jospJODImplementation.extendsFrom jcpAPIsPublicImplementation

    // JSL
    jospJSLImplementation.extendsFrom jcpAPIsPublicImplementation
}

dependencies {
    // JOD
    jospJODImplementation sourceSets.jcpAPIsPublic.output
    jospJODImplementation 'commons-cli:commons-cli:1.4'
    jospJODImplementation 'com.googlecode.clichemaven:cliche:110413'

    // JSL
    jospJSLImplementation sourceSets.jcpAPIsPublic.output
    jospJSLImplementation 'commons-cli:commons-cli:1.4'
    jospJSLImplementation 'com.googlecode.clichemaven:cliche:110413'
}


// -------------
// Runners Tasks
// -------------

// JOD

// run JOD Apple (resilient)...group("JOSP runners")
// clean JOD Apple (resilient)...group("JOSP cleaners")
// run JOD Fruit (new)...group("JOSP runners")


// JSL

// run JSL Resilient...group("JOSP runners")
// clean JSL Resilient...group("JOSP cleaners")
// run JSL New...group("JOSP runners")


// ---------------------
// Runners Configs Tasks
// ---------------------

// Make Java Runnable
def makeJODJavaRunnable(String runnableName, String config_yml, String struct_jod, String perms_jod) {
    runnableName = "JOD${runnableName}"
    String mainClass = 'com.robypomper.josp.jod.JODShell'
    File workingDir = file("envs/runnables/jod/${runnableName}")

    JavaRunnableUtils.makeJavaFromSourceSet(project, sourceSets.jospJOD, mainClass, runnableName, workingDir)
    String jarTaskName = "java${runnableName}Run"

    tasks.getByName(jarTaskName) {
        group 'JOSP runners jod'
        standardInput = System.in
        //args = ['--configs', 'src/jospJOD/configs/jod_dev.yml']
        //jvmArgs = ['-Djavax.net.debug=ssl']

        doFirst {
            delete workingDir
            copy {
                from "src/jospJOD/configs/${config_yml}"
                from "src/jospJOD/configs/${struct_jod}"
                from "src/jospJOD/configs/${perms_jod}"
                rename 'jod(.+).yml', 'jod.yml'
                rename 'struct(.+).jod', 'struct.jod'
                rename 'perms(.+).jod', 'perms.jod'
                into workingDir
            }
        }
    }
}
def makeJSLJavaRunnable(String runnableName, String config_yml) {
    runnableName = "JSL${runnableName}"
    String mainClass = 'com.robypomper.josp.jsl.JSLShell'
    File workingDir = file("envs/runnables/jsl/${runnableName}")

    JavaRunnableUtils.makeJavaFromSourceSet(project, sourceSets.jospJSL, mainClass, runnableName, workingDir)
    String jarTaskName = "java${runnableName}Run"

    tasks.getByName(jarTaskName) {
        group 'JOSP runners jsl'
        standardInput = System.in
        //args = ['--configs', 'src/jospJSL/configs/jsl_dev.yml']
        //jvmArgs = ['-Djavax.net.debug=ssl']

        doFirst {
            delete workingDir
            copy {
                from "src/jospJSL/configs/${config_yml}"
                rename 'jsl(.+).yml', 'jsl.yml'
                into workingDir
            }
        }
    }
}

// JOD
/*
 * ObjId    =>  unset   local   cloud
 * Owner    =>  unset   set
 *
 * Configs (ObjId, OwnerId, Off/Online)
 */
makeJODJavaRunnable('uuf','jod_uuf.yml','struct_default.jod','perms_default.jod')
makeJODJavaRunnable('uun','jod_uun.yml','struct_default.jod','perms_default.jod')
makeJODJavaRunnable('usf','jod_usf.yml','struct_default.jod','perms_default.jod')
makeJODJavaRunnable('usn','jod_usn.yml','struct_default.jod','perms_default.jod')
makeJODJavaRunnable('luf','jod_luf.yml','struct_default.jod','perms_default.jod')
makeJODJavaRunnable('lun','jod_lun.yml','struct_default.jod','perms_default.jod')
makeJODJavaRunnable('lsf','jod_lsf.yml','struct_default.jod','perms_default.jod')
makeJODJavaRunnable('lsn','jod_lsn.yml','struct_default.jod','perms_default.jod')
makeJODJavaRunnable('cuf','jod_cuf.yml','struct_default.jod','perms_default.jod')
makeJODJavaRunnable('cun','jod_cun.yml','struct_default.jod','perms_default.jod')
makeJODJavaRunnable('csf','jod_csf.yml','struct_default.jod','perms_default.jod')
makeJODJavaRunnable('csn','jod_csn.yml','struct_default.jod','perms_default.jod')


// JSL
/**
 * Usr    =>  unset   set   anonymous
 *            when set, check that set token is valid and not expired
 *
 * Configs (Usr, Off/Online)
 */
makeJSLJavaRunnable('uf','jsl_uf.yml')
makeJSLJavaRunnable('un','jsl_un.yml')
makeJSLJavaRunnable('sf','jsl_sf.yml')
makeJSLJavaRunnable('sn','jsl_sn.yml')


// -------------------
// Publication include
// -------------------

apply from: 'build_josp_publish.gradle'

task jospJOD_PublishToLocal {
    description = 'Publish...'
    group = 'JOSP publishers (locals)'
    dependsOn publishJodPublicationToMavenLocal
}

task jospJOD_PublishToSonatype {
    description = 'Publish...'
    group = 'JOSP publishers (sonatype)'
//    dependsOn publishJodPublicationToSonatype
}

// JSL
task jospJSL_PublishToLocal {
    description = 'Publish...'
    group = 'JOSP publishers (locals)'
    dependsOn publishJslPublicationToMavenLocal
}

task jospJSL_PublishToSonatype {
    description = 'Publish...'
    group = 'JOSP publishers (sonatype)'
//    dependsOn publishJslPublicationToSonatype
}
