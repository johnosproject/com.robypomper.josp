import com.robypomper.build.java.JavaRunnableUtils

sourceSets {
    jospJOD {}
    jospJSL {
        java {
            srcDirs 'src/jospJSL/java_public'   // interfaces only
            srcDirs 'src/jospJSL/java'          // main jod classes
            srcDirs 'src/jospJSL/java_mains'    // main runnable classes
            srcDirs 'src/jospJSL/java_impl002'  // implementations for v 0.0.2
        }
    }
}

dependencies {

    // JOD
    jospJODImplementation sourceSets.jcpAPIsPublic.output
    jospJODImplementation sourceSets.jcpAPIsPublic.runtimeClasspath
    jospJODImplementation 'commons-cli:commons-cli:1.4'
    jospJODImplementation 'com.googlecode.clichemaven:cliche:110413'

    // JSL
    jospJSLImplementation sourceSets.jcpAPIsPublic.output
    jospJSLImplementation sourceSets.jcpAPIsPublic.runtimeClasspath
    jospJSLImplementation 'commons-cli:commons-cli:1.4'
    jospJSLImplementation 'com.googlecode.clichemaven:cliche:110413'
}


// Make Java Runnable

def makeJODJavaRunnable(String runnableName, String config_yml, String struct_jod, String perms_jod) {
    runnableName = "JOD${runnableName}"
    String mainClass = 'com.robypomper.josp.jod.JODShell'
    File workingDir = file("envs/runnables/jod/${runnableName}")

    JavaRunnableUtils.makeJavaFromSourceSet(project, sourceSets.jospJOD, mainClass, runnableName, workingDir)
    String jarTaskName = "java${runnableName}Run"

    tasks.getByName(jarTaskName) {
        group 'application jod'
        standardInput = System.in
        //args = ['--configs', 'src/jospJOD/configs/jod_dev.yml']
        //jvmArgs = ['-Djavax.net.debug=ssl']

        doFirst {
            delete workingDir
            copy {
                from "src/jospJOD/configs/${config_yml}"
                from "src/jospJOD/configs/${struct_jod}"
                from "src/jospJOD/configs/${perms_jod}"
                rename 'jod(.+).yml', 'jod.yml'
                rename 'struct(.+).jod', 'struct.jod'
                rename 'perms(.+).jod', 'perms.jod'
                into workingDir
            }
        }
    }
}

def makeJSLJavaRunnable(String runnableName, String config_yml) {
    runnableName = "JSL${runnableName}"
    String mainClass = 'com.robypomper.josp.jsl.JSLShell'
    File workingDir = file("envs/runnables/jsl/${runnableName}")

    JavaRunnableUtils.makeJavaFromSourceSet(project, sourceSets.jospJSL, mainClass, runnableName, workingDir)
    String jarTaskName = "java${runnableName}Run"

    tasks.getByName(jarTaskName) {
        group 'application jsl'
        standardInput = System.in
        //args = ['--configs', 'src/jospJSL/configs/jsl_dev.yml']
        //jvmArgs = ['-Djavax.net.debug=ssl']

        doFirst {
            delete workingDir
            copy {
                from "src/jospJSL/configs/${config_yml}"
                rename 'jsl(.+).yml', 'jsl.yml'
                into workingDir
            }
        }
    }
}



// JOD
/*
 * ObjId    =>  unset   local   cloud
 * Owner    =>  unset   set
 *
 * Configs (ObjId, OwnerId, Off/Online)
 */

makeJODJavaRunnable('uuf','jod_uuf.yml','struct_default.jod','perms_default.jod')
makeJODJavaRunnable('uun','jod_uun.yml','struct_default.jod','perms_default.jod')
makeJODJavaRunnable('usf','jod_usf.yml','struct_default.jod','perms_default.jod')
makeJODJavaRunnable('usn','jod_usn.yml','struct_default.jod','perms_default.jod')

makeJODJavaRunnable('luf','jod_luf.yml','struct_default.jod','perms_default.jod')
makeJODJavaRunnable('lun','jod_lun.yml','struct_default.jod','perms_default.jod')
makeJODJavaRunnable('lsf','jod_lsf.yml','struct_default.jod','perms_default.jod')
makeJODJavaRunnable('lsn','jod_lsn.yml','struct_default.jod','perms_default.jod')

makeJODJavaRunnable('cuf','jod_cuf.yml','struct_default.jod','perms_default.jod')
makeJODJavaRunnable('cun','jod_cun.yml','struct_default.jod','perms_default.jod')
makeJODJavaRunnable('csf','jod_csf.yml','struct_default.jod','perms_default.jod')
makeJODJavaRunnable('csn','jod_csn.yml','struct_default.jod','perms_default.jod')


// JSL

/**
 * Usr    =>  unset   set   anonymous
 *            when set, check that set token is valid and not expired
 *
 * Configs (Usr, Off/Online)
 */

makeJSLJavaRunnable('uf','jsl_uf.yml')
makeJSLJavaRunnable('un','jsl_un.yml')
makeJSLJavaRunnable('sf','jsl_sf.yml')
makeJSLJavaRunnable('sn','jsl_sn.yml')
