import com.robypomper.build.java.JavaRunnableUtils

sourceSets {
    jospCore {
        java {
            srcDirs 'src/jospCore/java_public'   // interfaces only
            srcDirs 'src/jospCore/java'          // main jcp classes
            srcDirs 'src/jospCore/java_impl002'  // implementations for v 0.0.2
        }
    }
    jospJOD {
        java {
            srcDirs 'src/jospJOD/java_public'   // interfaces only
            srcDirs 'src/jospJOD/java'          // main jod classes
            srcDirs 'src/jospJOD/java_mains'    // main runnable classes
            srcDirs 'src/jospJOD/java_impl002'  // implementations for v 0.0.2
        }
    }
    jospJSL {
        java {
            srcDirs 'src/jospJSL/java_public'   // interfaces only
            srcDirs 'src/jospJSL/java'          // main jod classes
            srcDirs 'src/jospJSL/java_mains'    // main runnable classes
            srcDirs 'src/jospJSL/java_impl002'  // implementations for v 0.0.2
        }
    }
}

dependencies {
    // Core - All
    jospCoreImplementation sourceSets.jospCommons.output
    jospCoreImplementation sourceSets.jospCommons.runtimeClasspath

    // JOD - All
    jospJODImplementation sourceSets.jospCore.output
    jospJODImplementation configurations.jospCoreImplementation
    jospJODImplementation sourceSets.jcpApisPublic.output
    jospJODImplementation sourceSets.jcpApisPublic.runtimeClasspath
    jospJODImplementation 'org.yaml:snakeyaml:1.25'
    // JOD - Mains
    jospJODImplementation 'commons-cli:commons-cli:1.4'
    jospJODImplementation 'com.googlecode.clichemaven:cliche:110413'

    // JSL - All
    jospJSLImplementation sourceSets.jospCore.output
    jospJSLImplementation configurations.jospCoreImplementation
    jospJSLImplementation 'org.yaml:snakeyaml:1.25'
    // JSL - Impls
    jospJSLImplementation sourceSets.jcpApisPublic.output
    jospJSLImplementation sourceSets.jcpApisPublic.runtimeClasspath
    // JSL - Mains
    jospJSLImplementation 'commons-cli:commons-cli:1.4'
    jospJSLImplementation 'com.googlecode.clichemaven:cliche:110413'
}

// Add java app's run tasks
JavaRunnableUtils.makeJavaFromSourceSet(project,sourceSets.jospJOD,'com.robypomper.josp.jod.JODShell','_Shell')
JavaRunnableUtils.makeJavaFromSourceSet(project,sourceSets.jospJSL,'com.robypomper.josp.jsl.JSLShell','_Shell')

tasks.javaJospJOD_ShellRun {
    standardInput = System.in
    args = ['--configs', 'src/jospJOD/configs/jod_dev.yml']
    //jvmArgs = ['-Djavax.net.debug=ssl']
}

tasks.javaJospJSL_ShellRun {
    standardInput = System.in
    args = ['--configs', 'src/jospJSL/configs/jsl_dev.yml']
    //jvmArgs = ['-Djavax.net.debug=ssl']
}



// Tests

sourceSets {
    jospJODCommTest {
        java {
            compileClasspath += sourceSets.jospJOD.output
            runtimeClasspath += sourceSets.jospJOD.output
            compileClasspath += sourceSets.jospJSL.output
            runtimeClasspath += sourceSets.jospJSL.output
            srcDirs = ['src/jospJODTest/comm/java']
        }
    }
    jospJSLCommTest {
        compileClasspath += sourceSets.jospJSL.output
        runtimeClasspath += sourceSets.jospJSL.output
        compileClasspath += sourceSets.jospJOD.output
        runtimeClasspath += sourceSets.jospJOD.output
        java.srcDirs = ['src/jospJSLTest/comm/java']
    }
}

configurations {
    jospJODCommTestImplementation.extendsFrom jospJODImplementation
    jospJODCommTestRuntimeOnly.extendsFrom jospJODRuntimeOnly

    jospJSLCommTestImplementation.extendsFrom jospJSLImplementation
    jospJSLCommTestRuntimeOnly.extendsFrom jospJSLRuntimeOnly
}

dependencies {
    jospJODCommTestImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    jospJODCommTestRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'

    jospJSLCommTestImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    jospJSLCommTestRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
}

task jospJODTest {
    description = 'Runs all JOD tests.'
    group = 'verification'
}

task jospJODCommTest(type: Test) {
    description = 'Runs JOD Communication tests.'
    group = 'verification'

    testClassesDirs = sourceSets.jospJODCommTest.output.classesDirs
    classpath = sourceSets.jospJODCommTest.runtimeClasspath
    shouldRunAfter test
    useJUnitPlatform()
    //jvmArgs '-Djavax.net.debug=all'
}


task jospJSLTest {
    description = 'Runs all JSL tests.'
    group = 'verification'
}

task jospJSLCommTest(type: Test) {
    description = 'Runs JSL Communication tests.'
    group = 'verification'

    testClassesDirs = sourceSets.jospJSLCommTest.output.classesDirs
    classpath = sourceSets.jospJSLCommTest.runtimeClasspath
    shouldRunAfter test
    useJUnitPlatform()
    //jvmArgs '-Djavax.net.debug=all'
}


jospJODTest.dependsOn jospJODCommTest
check.dependsOn jospJODTest

jospJSLTest.dependsOn jospJSLCommTest
check.dependsOn jospJSLTest


// gradle > intellij settings
idea {
    module {
        testSourceDirs += project.sourceSets.jospJODCommTest.java.srcDirs
        testSourceDirs += project.sourceSets.jospJODCommTest.resources.srcDirs
        testSourceDirs += project.sourceSets.jospJSLCommTest.java.srcDirs
        testSourceDirs += project.sourceSets.jospJSLCommTest.resources.srcDirs
    }
}