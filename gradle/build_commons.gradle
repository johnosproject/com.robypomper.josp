/* *****************************************************************************
 * The John Operating System Project is the collection of software and configurations
 * to generate IoT EcoSystem, like the John Operating System Platform one.
 * Copyright (C) 2020 Roberto Pompermaier
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 **************************************************************************** */

/**
 * Gradle configurations to manage JOSP Commons as java implementations.
 *
 * Summary:
 * - JOSP Commons configs
 * - Publication include
 *
 * This file provide the jospCommons sourceSet linked by other JOSP's Project's
 * Gradle files (build_jcpAPIs.gradle,build_josp.gradle and build_tests.gradle).
 */


// --------------------
// JOSP Commons configs
// --------------------

sourceSets {
    jospCommons {
        java {
            srcDirs 'src/jospCommons/java'
        }
    }
}

dependencies {
    // Commons - Internal
    jospCommonsImplementation "org.apache.logging.log4j:log4j-api:${project.ext.get("version.apache.log4j")}"           // Logger
    jospCommonsImplementation "org.apache.logging.log4j:log4j-core:${project.ext.get("version.apache.log4j")}"
    jospCommonsImplementation "org.yaml:snakeyaml:${project.ext.get("version.snakeyaml")}"                              // YAML
    jospCommonsImplementation "com.github.scribejava:scribejava-core:${project.ext.get("version.scribejava")}"          // HTTP & OAuth2
    jospCommonsImplementation "com.github.scribejava:scribejava-apis:${project.ext.get("version.scribejava")}"
    jospCommonsCompileOnly "org.projectlombok:lombok:${project.ext.get("version.lombok")}"                              // Lombok annotations
    jospCommonsAnnotationProcessor "org.projectlombok:lombok:${project.ext.get("version.lombok")}"
    jospCommonsImplementation "org.jmdns:jmdns:${project.ext.get("version.jmdns")}"                                     // mDNS
}


// -------------------
// Publication include
// -------------------

apply from: 'gradle/build_commons_publish.gradle'


// JOSP Commons
task jospCommons_PublishToLocal {
    description = 'Publish...'
    group = 'JOSP publishers (locals)'
    dependsOn publishJospCommonsPublicationToMavenLocal
}

task jospCommons_PublishToSonatype {
    description = 'Publish...'
    group = 'JOSP publishers (sonatype)'
//    dependsOn publishJospCommonsPublicationToSonatype
}
