/*******************************************************************************
 * The John Cloud Platform set of infrastructure and software required to provide
 * the "cloud" to an IoT EcoSystem, like the John Operating System Platform one.
 * Copyright 2020 Roberto Pompermaier
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 ******************************************************************************/

import com.robypomper.build.java.JavaPublicationUtils

// --------------------------
// Jar Tasks for publications
// --------------------------

// JOSP Commons (Docs and Src)
def jospCommonsName = 'JOSP Commons Library'
def jospCommonsArtifact = 'jospCommons'
def jospCommonsVersion = '2.0.0'

task jospCommonsJar(type: Jar) {
    // JOD source code
    from sourceSets.jospCommons.output
    // JOSP Commons and JCP APIs Public
    from {
        sourceSets.jospCommons.runtimeClasspath.collect {
            if (!it.exists()) return
            if (!it.isDirectory()) return
            it
        }
    }

    manifest {
        attributes 'Implementation-Title': jospCommonsName,
                'Implementation-Version': jospCommonsVersion
    }
}

task jospCommonsDocs(type: Javadoc) {
    source sourceSets.jospCommons.allJava
    classpath = sourceSets.jospCommons.runtimeClasspath
    classpath = sourceSets.jospCommons.compileClasspath
}

task jospCommonsDocsJar(type: Jar) {
    classifier = 'doc'
    from jospCommonsDocs

    manifest {
        attributes 'Implementation-Title': jospCommonsName + " - Docs",
                'Implementation-Version': jospCommonsVersion
    }
}

task jospCommonsSrcJar(type: Jar) {
    classifier = 'src'

    from sourceSets.jospCommons.allSource

    manifest {
        attributes 'Implementation-Title': jospCommonsName + " - Sources",
                'Implementation-Version': jospCommonsVersion
    }
}


// ------------
// Publications
// ------------

publishing {
    publications {

        // JOSP Commons
        jospCommons(MavenPublication) {
            groupId = project.group
            artifactId = jospCommonsArtifact
            version = jospCommonsVersion

            artifact tasks.jospCommonsJar
            artifact tasks.jospCommonsSrcJar
            artifact tasks.jospCommonsDocsJar

            JavaPublicationUtils.initPom(pom, jospCommonsName, 'The JOSP Commons Library', projectUrl, projectGit, projectGitUrl, "GPLv3", "https://www.gnu.org/licenses/gpl-3.0.html")
            JavaPublicationUtils.injectDependenciesToPom(pom, configurations.jospCommonsImplementation, true)
        }

    }
}
