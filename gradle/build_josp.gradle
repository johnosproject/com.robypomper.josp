import com.robypomper.build.java.JavaRunnableUtils

/**
 * Gradle configurations to manage JOD and JSL as java implementations.
 *
 * Summary:
 * - JOSP Commons configs
 * - Runners Tasks
 * - Runners Configs Tasks
 * - Runners Discovery Tasks
 * - Publication include
 *
 * This file configure and provide tasks for JOD and JSL artifacts:
 * - JOD: run (Apple, Fruit), run by Configs, publish as jar
 * - JSL: run (resilient, new), run by Configs, publish as jar
 */


// -------------------
// JOD and JSL configs
// -------------------

sourceSets {
    jospJOD {}
    jospJSL {}
}

configurations {
    // JOD
    jospJODImplementation.extendsFrom jcpAPIsPublicImplementation

    // JSL
    jospJSLImplementation.extendsFrom jcpAPIsPublicImplementation
}

dependencies {
    // JOD
    jospJODImplementation sourceSets.jcpAPIsPublic.output
    jospJODImplementation 'commons-cli:commons-cli:1.4'
    jospJODImplementation 'com.googlecode.clichemaven:cliche:110413'

    // JSL
    jospJSLImplementation sourceSets.jcpAPIsPublic.output
    jospJSLImplementation 'commons-cli:commons-cli:1.4'
    jospJSLImplementation 'com.googlecode.clichemaven:cliche:110413'
}


// Make Java Runnable
def makeJODJavaRunnable(String runnableName, String config_yml, String struct_jod, String perms_jod) {
    makeJODJavaRunnable(runnableName, config_yml, struct_jod, perms_jod, null, true)
}
def makeJODJavaRunnable(String runnableName, String config_yml, String struct_jod, String perms_jod, String group_name) {
    makeJODJavaRunnable(runnableName, config_yml, struct_jod, perms_jod, group_name, true)
}
def makeJODJavaRunnable(String runnableName, String config_yml, String struct_jod, String perms_jod, boolean overrideIfExist) {
    makeJODJavaRunnable(runnableName, config_yml, struct_jod, perms_jod, null, overrideIfExist)
}
def makeJODJavaRunnable(String runnableName, String config_yml, String struct_jod, String perms_jod, String group_name, boolean overrideIfExist) {
    runnableName = "JOD${runnableName}"
    String mainClass = 'com.robypomper.josp.jod.JODShell'
    File workingDir = file("envs/runnables/jod/${runnableName}")

    JavaRunnableUtils.makeJavaFromSourceSet(project, sourceSets.jospJOD, mainClass, runnableName, workingDir)
    String jarTaskName = "java${runnableName}Run"

    tasks.getByName(jarTaskName) {
        group = group_name==null ? 'JOSP runners jod' : "JOSP runners jod ($group_name)"
        standardInput = System.in
        //args = ['--configs', 'src/jospJOD/configs/jod_dev.yml']
        //jvmArgs = ['-Djavax.net.debug=ssl']

        doFirst {
            if (workingDir.exists() && overrideIfExist)
                delete workingDir

            if (!workingDir.exists())
                copy {
                    from "src/jospJOD/configs/${config_yml}"
                    from "src/jospJOD/configs/${struct_jod}"
                    from "src/jospJOD/configs/${perms_jod}"
                    rename 'jod(.+).yml', 'jod.yml'
                    rename 'struct(.+).jod', 'struct.jod'
                    rename 'perms(.+).jod', 'perms.jod'
                    into workingDir
                }
        }
    }
}
def makeJSLJavaRunnable(String runnableName, String config_yml) {
    makeJSLJavaRunnable(runnableName, config_yml, null, true)
}
def makeJSLJavaRunnable(String runnableName, String config_yml, String group_name) {
    makeJSLJavaRunnable(runnableName, config_yml, group_name, true)
}
def makeJSLJavaRunnable(String runnableName, String config_yml, boolean overrideIfExist) {
    makeJSLJavaRunnable(runnableName, config_yml, null, overrideIfExist)
}
def makeJSLJavaRunnable(String runnableName, String config_yml, String group_name, boolean overrideIfExist) {
    runnableName = "JSL${runnableName}"
    String mainClass = 'com.robypomper.josp.jsl.JSLShell'
    File workingDir = file("envs/runnables/jsl/${runnableName}")

    JavaRunnableUtils.makeJavaFromSourceSet(project, sourceSets.jospJSL, mainClass, runnableName, workingDir)
    String jarTaskName = "java${runnableName}Run"

    tasks.getByName(jarTaskName) {
        group = group_name==null ? 'JOSP runners jsl' : "JOSP runners jsl ($group_name)"
        standardInput = System.in
        //args = ['--configs', 'src/jospJSL/configs/jsl_dev.yml']
        //jvmArgs = ['-Djavax.net.debug=ssl']

        doFirst {
            if (workingDir.exists() && overrideIfExist)
                delete workingDir

            if (!workingDir.exists())
                copy {
                    from "src/jospJSL/configs/${config_yml}"
                    rename 'jsl(.+).yml', 'jsl.yml'
                    into workingDir
                }
        }
    }
}


// -------------
// Runners Tasks
// -------------

// JOD
makeJODJavaRunnable('','jod_default.yml','struct_default.jod','perms_default.jod',false)
makeJODJavaRunnable('OnlyLocal','jod_only-local.yml','struct_default.jod','perms_default.jod',false)
makeJODJavaRunnable('OnlyCloud','jod_only-cloud.yml','struct_default.jod','perms_default.jod',false)
makeJODJavaRunnable('NoComm','jod_no-comm.yml','struct_default.jod','perms_default.jod',false)
makeJODJavaRunnable('Vanilla','jod_default.yml','struct_default.jod','perms_default.jod')
makeJODJavaRunnable('VanillaOnlyLocal','jod_only-local.yml','struct_default.jod','perms_default.jod')
makeJODJavaRunnable('VanillaOnlyCloud','jod_only-cloud.yml','struct_default.jod','perms_default.jod')
makeJODJavaRunnable('VanillaNoComm','jod_no-comm.yml','struct_default.jod','perms_default.jod')
task javaJOD_Clean(type: Delete) {
    group 'JOSP cleaners'
    delete "envs/runnables/jod/JOD"
}
clean.dependsOn javaJOD_Clean

// JSL
makeJSLJavaRunnable('','jsl_default.yml',false)
makeJSLJavaRunnable('OnlyLocal','jsl_only-local.yml',false)
makeJSLJavaRunnable('OnlyCloud','jsl_only-cloud.yml',false)
makeJSLJavaRunnable('NoComm','jsl_no-comm.yml',false)
makeJSLJavaRunnable('Vanilla','jsl_default.yml')
makeJSLJavaRunnable('VanillaOnlyLocal','jsl_only-local.yml')
makeJSLJavaRunnable('VanillaOnlyCloud','jsl_only-cloud.yml')
makeJSLJavaRunnable('VanillaNoComm','jsl_no-comm.yml')
task javaJSL_Clean(type: Delete) {
    group 'JOSP cleaners'
    delete "envs/runnables/jsl/JSL"
}
clean.dependsOn javaJSL_Clean


// ---------------------
// Runners Configs Tasks
// ---------------------

// JOD
/*
 * ObjId    =>  unset   local   cloud
 * Owner    =>  unset   set
 *
 * Configs (ObjId, OwnerId, Off/Online)
 */
makeJODJavaRunnable('uuf','configs/jod_uuf.yml','struct_default.jod','perms_default.jod','Configs')
makeJODJavaRunnable('uun','configs/jod_uun.yml','struct_default.jod','perms_default.jod','Configs')
makeJODJavaRunnable('usf','configs/jod_usf.yml','struct_default.jod','perms_default.jod','Configs')
makeJODJavaRunnable('usn','configs/jod_usn.yml','struct_default.jod','perms_default.jod','Configs')
makeJODJavaRunnable('luf','configs/jod_luf.yml','struct_default.jod','perms_default.jod','Configs')
makeJODJavaRunnable('lun','configs/jod_lun.yml','struct_default.jod','perms_default.jod','Configs')
makeJODJavaRunnable('lsf','configs/jod_lsf.yml','struct_default.jod','perms_default.jod','Configs')
makeJODJavaRunnable('lsn','configs/jod_lsn.yml','struct_default.jod','perms_default.jod','Configs')
makeJODJavaRunnable('cuf','configs/jod_cuf.yml','struct_default.jod','perms_default.jod','Configs')
makeJODJavaRunnable('cun','configs/jod_cun.yml','struct_default.jod','perms_default.jod','Configs')
makeJODJavaRunnable('csf','configs/jod_csf.yml','struct_default.jod','perms_default.jod','Configs')
makeJODJavaRunnable('csn','configs/jod_csn.yml','struct_default.jod','perms_default.jod','Configs')


// JSL
/**
 * Usr    =>  unset   set   anonymous
 *            when set, check that set token is valid and not expired
 *
 * Configs (Usr, Off/Online)
 */
makeJSLJavaRunnable('uf','configs/jsl_uf.yml','Configs')
makeJSLJavaRunnable('un','configs/jsl_un.yml','Configs')
makeJSLJavaRunnable('sf','configs/jsl_sf.yml','Configs')
makeJSLJavaRunnable('sn','configs/jsl_sn.yml','Configs')


// -----------------------
// Runners Discovery Tasks
// -----------------------

// JOD
/*
 * ObjId    =>  unset   local   cloud
 * Owner    =>  unset   set
 *
 * Configs (ObjId, OwnerId, Off/Online)
 */
makeJODJavaRunnable('Avahi','discovery/jod_avahi.yml','struct_default.jod','perms_default.jod','Discovery')
makeJODJavaRunnable('JmDNS','discovery/jod_jmdns.yml','struct_default.jod','perms_default.jod','Discovery')
makeJODJavaRunnable('JmmDNS','discovery/jod_jmmdns.yml','struct_default.jod','perms_default.jod','Discovery')

// JSL
/**
 * Usr    =>  unset   set   anonymous
 *            when set, check that set token is valid and not expired
 *
 * Configs (Usr, Off/Online)
 */
makeJSLJavaRunnable('Avahi','discovery/jsl_avahi.yml','Discovery')
makeJSLJavaRunnable('JmDNS','discovery/jsl_jmdns.yml','Discovery')
makeJSLJavaRunnable('JmmDNS','discovery/jsl_jmmdns.yml','Discovery')


// -------------------
// Publication include
// -------------------

apply from: 'gradle/build_josp_publish.gradle'

// JOD
task jospJOD_PublishToLocal {
    description = 'Publish...'
    group = 'JOSP publishers (locals)'
    dependsOn publishJodPublicationToMavenLocal
}
task jospJOD_PublishToSonatype {
    description = 'Publish...'
    group = 'JOSP publishers (sonatype)'
//    dependsOn publishJodPublicationToSonatype
}

// JSL
task jospJSL_PublishToLocal {
    description = 'Publish...'
    group = 'JOSP publishers (locals)'
    dependsOn publishJslPublicationToMavenLocal
}
task jospJSL_PublishToSonatype {
    description = 'Publish...'
    group = 'JOSP publishers (sonatype)'
//    dependsOn publishJslPublicationToSonatype
}
